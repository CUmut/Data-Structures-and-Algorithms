Heap data structure is a complete binary tree that satisfies the heap property. It is also called as a binary heap.

A complete binary tree is a special binary tree in which
    every level, except possibly the last, is filled
    all the nodes are as far left as possible

Heap Property is the property of a node in which

 (for max heap) key of each node is always greater than its child node/s and the key of the root node is the largest among all other nodes;
 (for min heap) key of each node is always smaller than the child node/s and the key of the root node is the smallest among all other nodes.

 Heapify

 Heapify is the process of creating a heap data structure from a binary tree. It is used to create a Min-Heap or a Max-Heap.

 Heap Data Structure Applications

     Heap is used while implementing a priority queue.
     Dijkstra’s Algorithm
     Heap Sort
     
---TR---
     
Yığın veri yapısı, öbek özelliğini karşılayan tam bir ikili ağaçtır. Aynı zamanda ikili yığın olarak da adlandırılır.

Tam bir ikili ağaç, içinde özel bir ikili ağaçtır.
     muhtemelen son hariç her seviye doldurulur
     tüm düğümler olabildiğince solda

Heap Property, içinde bir düğümün özelliğidir.
  (maks yığın için) her düğümün anahtarı her zaman alt düğümlerinden daha büyüktür ve kök düğümün anahtarı, diğer tüm düğümler arasında en büyüğüdür;
  Her bir düğümün (min heap için) anahtarı her zaman alt düğümden / düğümlerden daha küçüktür ve kök düğümün anahtarı diğer tüm düğümler arasında en küçük olanıdır.

  Yığınla;
  Heapify, ikili bir ağaçtan bir yığın veri yapısı oluşturma işlemidir. Min-Heap veya Max-Heap oluşturmak için kullanılır.

  Yığın Veri Yapısı Uygulamaları;
      Yığın, bir öncelik kuyruğu uygulanırken kullanılır.
      Dijkstra Algoritması
      Yığın Sıralama 

